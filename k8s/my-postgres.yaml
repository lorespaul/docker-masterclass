apiVersion: v1
kind: ConfigMap
metadata:
  name: my-postgres-init
data:
  init-pg.sql: |
    CREATE TABLE IF NOT EXISTS users(
      id serial PRIMARY KEY,
      email character varying(50) NOT NULL,
      username character varying(50) NOT NULL
    );
    INSERT INTO users(email, username) VALUES
    ('test1@gmail.com', 'test1'),
    ('test2@gmail.com', 'test2');
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-postgres
spec:
  selector:
    matchLabels:
      app: my-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: my-postgres
    spec:
      containers:
        - image: postgres:16.6-alpine
          name: my-postgres
          env:
            - name: POSTGRES_USER
              value: root
            - name: POSTGRES_PASSWORD
              value: betacom
            - name: POSTGRES_DB
              value: example
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            - containerPort: 5432
              name: my-postgres
          volumeMounts:
            - name: postgres-persistent-storage
              mountPath: /var/lib/postgresql/data/pgdata
              subPath: my-postgres
            - name: initialize-db-vol
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      volumes:
        - name: initialize-db-vol
          configMap:
            name: my-postgres-init
            items:
              - key: init-pg.sql
                path: init-pg.sql
        - name: postgres-persistent-storage
          persistentVolumeClaim:
            claimName: my-pv-claim
      resources:
        requests:
          cpu: 0.25
          memory: 64Mi
        limits:
          cpu: 0.5
          memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: my-postgres-svc
spec:
  type: ClusterIP
  selector:
    app: my-postgres
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-postgres-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - host: my-postgres.k8s.beta.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-postgres-svc
            port:
              number: 5432