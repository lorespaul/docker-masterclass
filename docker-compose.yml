version: '3'
services:
  node-server: # meglio usare - che _ per i nomi dei container, altrimenti ci potrebbero essere dei problemi di connettività (url malformed)
    build:
      context: ./
      args:
      - WHO_TO_GREET=World
      - WHO_TO_NOT_GREET="Moon
    scale: 1 # una sola replica
    environment:
    - SIMPLE_ENV=Yes, I'm here!
    - PG_ENABLED=true
    expose:
    - "8080"
    restart: unless-stopped # always può essere usato per lanciare automaticamente il container all'avvio di docker
    networks:
    - example_subnet
    depends_on:
    - pg-server
    deploy:  # container resources limits and reservations
      resources:
        limits:
          cpus: "0.5"
          memory: 256M
        reservations:
          memory: 128M
    # an healtcheck method can be declared
  pg-server:
    image: postgres
    environment:
    - POSTGRES_USER=root
    - POSTGRES_PASSWORD=betacom
    - POSTGRES_DB=example
    - PGDATA=/var/lib/postgresql/data/pgdata
    volumes: # un volume può caricare anche un solo file (non è per forza una cartella)
    - ./migrations/init-pg.sql:/docker-entrypoint-initdb.d/init-pg.sql
    ports:
    - "5434:5432"
    restart: unless-stopped
    networks:
    - example_subnet
  nginx:
    container_name: balancer
    image: nginx:stable
    restart: unless-stopped
    ports:
    - "8083:8080"
    volumes: # con :ro si aggiunge il volume in readonly
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
    - example_subnet
    depends_on:
    - node-server

networks:
  example_subnet:
    name: example-subnet
    # external: external può essere usato per utilizzare una rete già esistente
    #   name: my-subnet